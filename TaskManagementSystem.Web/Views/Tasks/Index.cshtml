@model IEnumerable<TaskViewModel>
@{
    ViewData["Title"] = "Tasks";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col">
        <h1 class="h2 mb-0">
            <i class="fas fa-list-check me-2"></i>Tasks
        </h1>
        <p class="text-muted">Manage and track all your tasks</p>
    </div>
    <div class="col-auto">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-circle me-2"></i>New Task
        </a>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" 
                           class="form-control" placeholder="Search tasks..." />
                </div>
            </div>
            <div class="col-md-3">
                <select name="status" class="form-select">
                    <option value="">All Status</option>
                    <option value="1" selected="@(ViewBag.StatusFilter == TaskManagementSystem.Web.Models.TaskStatus.Todo)">To Do</option>
                    <option value="2" selected="@(ViewBag.StatusFilter == TaskManagementSystem.Web.Models.TaskStatus.InProgress)">In Progress</option>
                    <option value="3" selected="@(ViewBag.StatusFilter == TaskManagementSystem.Web.Models.TaskStatus.Completed)">Completed</option>
                    <option value="4" selected="@(ViewBag.StatusFilter == TaskManagementSystem.Web.Models.TaskStatus.Cancelled)">Cancelled</option>
                </select>
            </div>
            <div class="col-md-3">
                <select name="priority" class="form-select">
                    <option value="">All Priorities</option>
                    <option value="1" selected="@(ViewBag.PriorityFilter == TaskPriority.Low)">Low</option>
                    <option value="2" selected="@(ViewBag.PriorityFilter == TaskPriority.Medium)">Medium</option>
                    <option value="3" selected="@(ViewBag.PriorityFilter == TaskPriority.High)">High</option>
                    <option value="4" selected="@(ViewBag.PriorityFilter == TaskPriority.Urgent)">Urgent</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-filter me-2"></i>Filter
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Tasks List -->
@if (Model.Any())
{
    <div class="row">
        @foreach (var task in Model)
        {
            <div class="col-lg-6 mb-3">
                <div class="task-card position-relative" data-status="@((int)task.Status)" data-priority="@((int)task.Priority)">
                    <div class="task-priority-indicator priority-@task.Priority.ToString().ToLower()"></div>
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="task-title mb-1">@task.Title</h5>
                            <p class="task-description text-muted mb-2">@task.Description</p>
                            <div class="d-flex align-items-center gap-3 flex-wrap">
                                @{
                                    string statusClass = task.Status switch
                                    {
                                        TaskManagementSystem.Web.Models.TaskStatus.Todo => "badge-status-todo",
                                        TaskManagementSystem.Web.Models.TaskStatus.InProgress => "badge-status-inprogress",
                                        TaskManagementSystem.Web.Models.TaskStatus.Completed => "badge-status-completed",
                                        TaskManagementSystem.Web.Models.TaskStatus.Cancelled => "badge-status-cancelled",
                                        _ => "badge-secondary"
                                    };
                                }
                                <span class="badge @statusClass">
                                    <i class="fas fa-circle me-1" style="font-size: 8px;"></i>
                                    @task.Status
                                </span>
                                
                                <span class="text-muted small">
                                    <i class="fas fa-calendar me-1"></i>
                                    @if (task.DueDate < DateTime.Now && task.Status != TaskManagementSystem.Web.Models.TaskStatus.Completed)
                                    {
                                        <span class="text-danger">Overdue: @task.DueDate.ToString("MMM dd, yyyy")</span>
                                    }
                                    else
                                    {
                                        @task.DueDate.ToString("MMM dd, yyyy")
                                    }
                                </span>
                                
                                @if (!string.IsNullOrEmpty(task.AssignedToUserName))
                                {
                                    <span class="text-muted small">
                                        <i class="fas fa-user me-1"></i>
                                        @task.AssignedToUserName
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="col-auto">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" asp-action="Details" asp-route-id="@task.Id">
                                            <i class="fas fa-eye me-2"></i>View Details
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-action="Edit" asp-route-id="@task.Id">
                                            <i class="fas fa-edit me-2"></i>Edit
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@task.Id">
                                            <i class="fas fa-trash me-2"></i>Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="fas fa-tasks fa-4x text-muted mb-3"></i>
            <h4>No tasks found</h4>
            <p class="text-muted mb-4">
                @if (!string.IsNullOrWhiteSpace(ViewBag.SearchTerm) || ViewBag.StatusFilter != null || ViewBag.PriorityFilter != null)
                {
                    <text>Try adjusting your filters or search criteria.</text>
                }
                else
                {
                    <text>Get started by creating your first task!</text>
                }
            </p>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus-circle me-2"></i>Create New Task
            </a>
        </div>
    </div>
}

<style>
    .gap-3 {
        gap: 1rem !important;
    }
</style>
